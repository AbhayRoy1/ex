Verilog Code for SR Flip-Flop with synchronous reset:
module sr_ff (q, qb, s, r, clk, rst);
output reg q;
output qb;
input s, r, clk, rst;
always @(posedge clk)
begin 
if (rst)
q = 0;
else 
if (s == 0 && r == 0)
q = q;
else 
if (s == 0 && r == 1)
q = 0;
else 
if (s == 1 && r == 0)
q = 1;
else 
if (s == 1 && r == 1)
q = 1’bx;
end
assign qb = ~q;
endmodule
Testbench for SR Flip-Flop with synchronous reset module:
module sr_ff_test;
reg s, r, clk, rst;
wire q, qb;
sr_ff s1(q, qb, s, r, clk, rst);
initial
begin
$monitor (“time = %0d”, $time, “ns”, “s =”, s, “r =”, r, “rst =”, rst, “q =”, q, “qb =”, qb);
#80 $finish;
end
initial
clk = 1’b0;
always
#5 clk = ~clk;
initial
begin 
rst = 1; s = 1; r = 0;
#10; rst = 0;
#10; s = 0; r = 0; 
#10; s = 0; r = 1; 
#10; s = 1; r = 0; 
#10; s = 1; r = 1; 
#10; s = 1; r = 0; 
#10; rst = 1;
end
endmodule
